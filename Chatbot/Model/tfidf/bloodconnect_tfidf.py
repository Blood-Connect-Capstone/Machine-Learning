# -*- coding: utf-8 -*-
"""bloodconnect-tfidf.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WkYg4Z82Wd9JJcpIPAJ9YGL5I8sUd2oG
"""

# Library
import pandas as pd
import numpy as np

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# load dataset
df = pd.read_csv('/content/bloodconnect_faq_dataset.csv')
df.head()

# Memisahkan question dan answer
faq_questions = df['question'].tolist()
faq_answers = df['answer'].tolist()

# TF-IDF vectorizer
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(faq_questions)

# Fungsi pencocokan
def retrieve_answer_tfidf(user_input, top_k=1):
    q_vec = vectorizer.transform([user_input])
    sim = cosine_similarity(q_vec, X)[0]
    top_indices = sim.argsort()[-top_k:][::-1]
    results = []
    for idx in top_indices:
        results.append((sim[idx], faq_questions[idx], faq_answers[idx]))
    return results

# Testing
hasil = retrieve_answer_tfidf("Apa itu fitur lokasi donor?")
for skor, q, a in hasil:
    print(f"\nPertanyaan cocok: {q}\nJawaban: {a}\nSkor: {skor:.2f}")

# Testing
hasil = retrieve_answer_tfidf("Apa itu fitur bloodconnect?")
for skor, q, a in hasil:
    print(f"\nPertanyaan cocok: {q}\nJawaban: {a}\nSkor: {skor:.2f}")

# Simpan vectorizer dan list QnA
with open("tfidf_vectorizer.pkl", "wb") as f:
    pickle.dump(vectorizer, f)

with open("faq_data.pkl", "wb") as f:
    pickle.dump({"questions": questions, "answers": answers}, f)
